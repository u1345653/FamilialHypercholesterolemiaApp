### BUILDING FIRST WEBSITE WITH FLASK WEBSITE FRAMEWORK
# PURPOSE: BUILD UPON THE BASIC-WEBPAGE BUILT OUT IN THE V1.0 EXERCISE IN THE FLASK PORTION OF THE COURSE
# VERSION: 2.0
# DEPENDENCIES: 'PIP INSTALL FLASK' IN CMD TO INSTALL NECESSARY FLASK LIBRARY

# STEP 1 - IMPORT INSTALLED FLASK CLASS FROM THE INSTALLED LIBRARY
from flask import Flask                  # IMPORTING THE FLASK CLASS FROM THE FLASK INSTALLED LIBRARY

# STEP 2 - CREATE A VARIABLE CONTAINING OUR FLASK OBJECT, WHICH PASSES THE 'NAME' PARAMETER
app = Flask(__name__)                  # VARIABLE NAME 'NAME' INSTANTIATES OUR APP FLASK OBJECT

############################################
#         ADDING MULTIPLE PAGES!           #
############################################

# STEP 3 - DEFINE THE APP.ROUTE: THE URL WE'RE TRANSPOSING OUR FLASK OBJECT TO.... IF JUST '/', IT WILL JUST BE THE HOMEPAGE OF THE PORT....
@app.route('/')               # DEFAULT EXAMPLE

# STEP 4 - CALLING THE FUNCTION THAT PRINTS THE TEXT ON OUR HOME PAGE!
def home():
    return "Homepage goes here!"            # HOME PAGE PRINT CONTENT

# STEP 5 - DEFINING APP.ROUTE (WEBPAGE) #2 - OUR ABOUT PAGE!
@app.route('/about/')         # DEFINING OUR ABOUT URL PAGE!

# STEP 6 -  CALLING FUNCTION THAT WILL PRINT OUR ABOUT PAGE CONTENT!
def about():                                # FOR NOW WE HAVE TITLED IT, 'ABOUT()', RATHER THAN 'HOME()'
    return "About Page Content goes here!"     # ABOUT PAGE PRINT CONTENT

# STEP 6 - DEFINING CONDITIONAL THAT TRIGGERS OUR WEB APP TO RUN WHEN TRUE
if __name__ == "__main__":              # WE WANT OUR WEB APP TO RUN, IF THE __NAME__ VARIABLE CONTAINS THE __MAIN__ ARGUMENT (FOR NOW)
    app.run(debug=True)                 # CALLING THE .RUN() METHOD ON OUR FLASK OBJECT, WHICH ALLOWS US TO OPEN THE WEBPAGE FROM PORT 5000